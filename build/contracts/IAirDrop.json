{
  "contractName": "IAirDrop",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ClaimEther",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ClaimToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DepositEther",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DepositTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "recepient",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "amount",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "DropEther",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "recepient",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "amount",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "DropTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newContract",
          "type": "address"
        }
      ],
      "name": "NewContractAddress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawEther",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawTokens",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "depositTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositEther",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "recepients_",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amount_",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "deadline_",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v_",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r_",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s_",
          "type": "bytes32"
        }
      ],
      "name": "dropTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "recepients_",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amount_",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "deadline_",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v_",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r_",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s_",
          "type": "bytes32"
        }
      ],
      "name": "dropEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token_",
          "type": "address"
        }
      ],
      "name": "updateTokenAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimEther\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositEther\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"recepient\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amount\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"DropEther\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"recepient\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amount\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"DropTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"NewContractAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawEther\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawTokens\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositEther\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"depositTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recepients_\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amount_\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"deadline_\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v_\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r_\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s_\",\"type\":\"bytes32\"}],\"name\":\"dropEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recepients_\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amount_\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"deadline_\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v_\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r_\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s_\",\"type\":\"bytes32\"}],\"name\":\"dropTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"}],\"name\":\"updateTokenAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ClaimEther(address,uint256)\":{\"details\":\"'ClaimEther' return to member how many ethers he will receive after success transactions\",\"params\":{\"amount\":\"- how many ethers send to member\",\"to\":\"- address of member\"}},\"ClaimToken(address,uint256)\":{\"details\":\"'ClaimToken' return to member how many tokens he will receive after success transactions\",\"params\":{\"amount\":\"- how many tokens send to member\",\"to\":\"- address of member\"}},\"DepositEther(uint256)\":{\"details\":\"'DepositEther' info about success transfer from owner to SC\",\"params\":{\"amount\":\"- how many ether will deposit to contract balance\"}},\"DepositTokens(uint256)\":{\"details\":\"'DepositTokens' info about success transfer from owner to SC\",\"params\":{\"amount\":\"- how many tokens will deposit to contract balance\"}},\"DropEther(address[],uint256[],uint256)\":{\"details\":\"'DropEther' return how many ether will be available for member\",\"params\":{\"amount\":\"- how many ether will send to member\",\"deadline\":\"- how many times member have to collect ether\",\"recepient\":\"- address of receiver\"}},\"DropTokens(address[],uint256[],uint256)\":{\"details\":\"'DropTokens' return how many tokens will be available for member\",\"params\":{\"amount\":\"- how many tokens will send to member\",\"deadline\":\"- how many times member have to collect tokens\",\"recepient\":\"- address of receiver\"}},\"NewContractAddress(address)\":{\"details\":\"'NewContractAddress' inform about new ERC20 address which connect to 'AirDrop'\",\"params\":{\"newContract\":\"- address of new ERC20 contract\"}},\"WithdrawEther(address,uint256)\":{\"details\":\"'WithdrawEther' inform how many ether return to owner balance\",\"params\":{\"amount\":\"- how many ether will back to owner\",\"to\":\"- address of owner\"}},\"WithdrawTokens(address,uint256)\":{\"details\":\"'WithdrawTokens' inform how many tokens return to owner balance\",\"params\":{\"amount\":\"- how many tokens will back to owner\",\"to\":\"- address of owner\"}}},\"kind\":\"dev\",\"methods\":{\"claimEther()\":{\"details\":\"allows to claim available ether to the member NOTE: withdraw all available ether , you can call this function only if you have available ether\"},\"claimToken()\":{\"details\":\"allows to claim available tokens to the member NOTE: withdraw all available tokens , you can call this function only if you have available tokens\"},\"depositEther()\":{\"details\":\"send ethers from 'owner_' balance to SC NOTE : if you send ether to 0 address , ethers will be blocked.\"},\"depositTokens(uint256)\":{\"details\":\"send ERC20 tokens from 'owner_' balance to SC\",\"params\":{\"amount_\":\"- how many tokens deposits\"}},\"dropEther(address[],uint256[],uint256,uint8,bytes32,bytes32)\":{\"details\":\"make ethers available for members to withdraw\",\"params\":{\"amount_\":\"- how many ethers will be available\",\"deadline_\":\"- how long signature will be valid\",\"r_\":\"- contain info to recover signer\",\"recepients_\":\"- address of member\",\"s_\":\"- contain info to recover signer\",\"v_\":\"- can be only 27 or 28\"}},\"dropTokens(address[],uint256[],uint256,uint8,bytes32,bytes32)\":{\"details\":\"make tokens available for members to withdraw\",\"params\":{\"amount_\":\"- how many tokens will be available\",\"deadline_\":\"- how long signature will be valid\",\"r_\":\"- contain info to recover signer\",\"recepients_\":\"- address of member\",\"s_\":\"- contain info to recover signer\",\"v_\":\"- can be only 27 or 28\"}},\"updateTokenAddress(address)\":{\"details\":\"Change actually ERC20\",\"params\":{\"token_\":\"- address of new ERC20 which connected to 'this' contract\"}},\"withdrawEther()\":{\"details\":\"This function return ether to 'owner' NOTE: withdraw all available ether\"},\"withdrawTokens()\":{\"details\":\"This function return tokens to 'owner' NOTE: withdraw all available tokens\"}},\"version\":1},\"userdoc\":{\"events\":{\"ClaimEther(address,uint256)\":{\"notice\":\"used in function 'claimEther'\"},\"ClaimToken(address,uint256)\":{\"notice\":\"used in function 'claimToken'\"},\"DepositEther(uint256)\":{\"notice\":\"used in function 'depositEther'\"},\"DepositTokens(uint256)\":{\"notice\":\"used in function 'depositTokens'\"},\"DropEther(address[],uint256[],uint256)\":{\"notice\":\"used in function 'dropEther'\"},\"DropTokens(address[],uint256[],uint256)\":{\"notice\":\"used in function 'dropTokens'\"},\"NewContractAddress(address)\":{\"notice\":\"used in function 'updateTokenAddress'\"},\"WithdrawEther(address,uint256)\":{\"notice\":\"used in function 'withdrawEther'\"},\"WithdrawTokens(address,uint256)\":{\"notice\":\"used in function 'withdrawTokens'\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/interfaces/IAirDrop.sol\":\"IAirDrop\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/interfaces/IAirDrop.sol\":{\"keccak256\":\"0x4416a0ef95ec37326c3da83178fd1491444edf6db5a6b4d9b74a2ea958f64e7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8c7d16d8c8a33c8ec668fe5714fe09ae15afa03c8952a80352b9d10bb6b752\",\"dweb:/ipfs/QmY53N1HMzNKsKZheXhECK5zw7dPx8ForvwPhPvHcXtp6C\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.7;\n\ninterface IAirDrop {\n    /**\n     * @dev 'DepositTokens' info about success transfer from owner to SC\n     * @notice used in function 'depositTokens'\n     *\n     * @param amount - how many tokens will deposit to contract balance\n     */\n    event DepositTokens(uint256 amount);\n\n    /**\n     * @dev 'DepositEther' info about success transfer from owner to SC\n     * @notice used in function 'depositEther'\n     *\n     * @param amount - how many ether will deposit to contract balance\n     */\n    event DepositEther(uint256 amount);\n\n    /**\n     * @dev 'DropTokens' return how many tokens will be\n     * available for member\n     * @notice used in function 'dropTokens'\n     *\n     * @param recepient - address of receiver\n     * @param amount - how many tokens will send to member\n     * @param deadline - how many times member have to collect tokens\n     */\n    event DropTokens(address[] recepient, uint256[] amount, uint256 deadline);\n\n    /**\n     * @dev 'DropEther' return how many ether will be\n     * available for member\n     * @notice used in function 'dropEther'\n     *\n     * @param recepient - address of receiver\n     * @param amount - how many ether will send to member\n     * @param deadline - how many times member have to collect ether\n     */\n    event DropEther(address[] recepient, uint256[] amount, uint256 deadline);\n\n    /**\n     * @dev 'NewContractAddress' inform about new ERC20 address\n     * which connect to 'AirDrop'\n     * @notice used in function 'updateTokenAddress'\n     *\n     * @param newContract - address of new ERC20 contract\n     */\n    event NewContractAddress(address newContract);\n\n    /**\n     * @dev 'WithdrawEther' inform how many ether\n     * return to owner balance\n     * @notice used in function 'withdrawEther'\n     *\n     * @param to - address of owner\n     * @param amount - how many ether will back to owner\n     */\n    event WithdrawEther(address to, uint256 amount);\n\n    /**\n     * @dev 'WithdrawTokens' inform how many tokens\n     * return to owner balance\n     * @notice used in function 'withdrawTokens'\n     *\n     * @param to - address of owner\n     * @param amount - how many tokens will back to owner\n     */\n    event WithdrawTokens(address to, uint256 amount);\n\n    /**\n     * @dev 'ClaimToken' return to member how many tokens\n     * he will receive after success transactions\n     * @notice used in function 'claimToken'\n     *\n     * @param to - address of member\n     * @param amount - how many tokens send to member\n     */\n    event ClaimToken(address to, uint256 amount);\n\n    /**\n     * @dev 'ClaimEther' return to member how many ethers\n     * he will receive after success transactions\n     * @notice used in function 'claimEther'\n     *\n     * @param to - address of member\n     * @param amount - how many ethers send to member\n     */\n    event ClaimEther(address to, uint256 amount);\n\n    /**\n     * @dev send ERC20 tokens from 'owner_' balance to SC\n     *\n     * @param amount_ - how many tokens deposits\n     *\n     */\n    function depositTokens(uint256 amount_) external;\n\n    /**\n     * @dev send ethers from 'owner_' balance to SC\n     *\n     * NOTE : if you send ether to 0 address , ethers will be blocked.\n     */\n    function depositEther() external payable;\n\n    /**\n     * @dev make tokens available for members to withdraw\n     *\n     * @param recepients_ - address of member\n     * @param amount_ - how many tokens will be available\n     * @param deadline_ - how long signature will be valid\n     * @param v_ - can be only 27 or 28\n     * @param r_ - contain info to recover signer\n     * @param s_ - contain info to recover signer\n     *\n     */\n    function dropTokens(\n        address[] calldata recepients_,\n        uint256[] calldata amount_,\n        uint256 deadline_,\n        uint8 v_,\n        bytes32 r_,\n        bytes32 s_\n    ) external;\n\n    /**\n     * @dev make ethers available for members to withdraw\n     *\n     * @param recepients_ - address of member\n     * @param amount_ - how many ethers will be available\n     * @param deadline_ - how long signature will be valid\n     * @param v_ - can be only 27 or 28\n     * @param r_ - contain info to recover signer\n     * @param s_ - contain info to recover signer\n     *\n     */\n    function dropEther(\n        address[] calldata recepients_,\n        uint256[] calldata amount_,\n        uint256 deadline_,\n        uint8 v_,\n        bytes32 r_,\n        bytes32 s_\n    ) external;\n\n    /**\n     * @dev Change actually ERC20\n     *\n     * @param token_ - address of new ERC20 which connected\n     * to 'this' contract\n     */\n    function updateTokenAddress(address token_) external;\n\n    /**\n     * @dev This function return tokens to 'owner'\n     *\n     * NOTE: withdraw all available tokens\n     */\n    function withdrawTokens() external;\n\n    /**\n     * @dev This function return ether to 'owner'\n     *\n     * NOTE: withdraw all available ether\n     */\n    function withdrawEther() external;\n\n    /**\n     * @dev allows to claim available tokens\n     * to the member\n     *\n     * NOTE: withdraw all available tokens , you can call\n     * this function only if you have available tokens\n     */\n    function claimToken() external;\n\n    /**\n     * @dev allows to claim available ether\n     * to the member\n     *\n     * NOTE: withdraw all available ether , you can call\n     * this function only if you have available ether\n     */\n    function claimEther() external;\n}\n",
  "sourcePath": "/Users/pavel/SecondTaskZanozin/interfaces/IAirDrop.sol",
  "ast": {
    "absolutePath": "project:/interfaces/IAirDrop.sol",
    "exportedSymbols": {
      "IAirDrop": [
        2869
      ]
    },
    "id": 2870,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2735,
        "literals": [
          "solidity",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:13"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 2869,
        "linearizedBaseContracts": [
          2869
        ],
        "name": "IAirDrop",
        "nameLocation": "67:8:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 2736,
              "nodeType": "StructuredDocumentation",
              "src": "82:211:13",
              "text": " @dev 'DepositTokens' info about success transfer from owner to SC\n @notice used in function 'depositTokens'\n @param amount - how many tokens will deposit to contract balance"
            },
            "id": 2740,
            "name": "DepositTokens",
            "nameLocation": "304:13:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2738,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "326:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2740,
                  "src": "318:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2737,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "318:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "317:16:13"
            },
            "src": "298:36:13"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2741,
              "nodeType": "StructuredDocumentation",
              "src": "340:208:13",
              "text": " @dev 'DepositEther' info about success transfer from owner to SC\n @notice used in function 'depositEther'\n @param amount - how many ether will deposit to contract balance"
            },
            "id": 2745,
            "name": "DepositEther",
            "nameLocation": "559:12:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2743,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "580:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2745,
                  "src": "572:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2742,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "572:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "571:16:13"
            },
            "src": "553:35:13"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2746,
              "nodeType": "StructuredDocumentation",
              "src": "594:322:13",
              "text": " @dev 'DropTokens' return how many tokens will be\n available for member\n @notice used in function 'dropTokens'\n @param recepient - address of receiver\n @param amount - how many tokens will send to member\n @param deadline - how many times member have to collect tokens"
            },
            "id": 2756,
            "name": "DropTokens",
            "nameLocation": "927:10:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2749,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "recepient",
                  "nameLocation": "948:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2756,
                  "src": "938:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2747,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "938:7:13",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2748,
                    "nodeType": "ArrayTypeName",
                    "src": "938:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2752,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "969:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2756,
                  "src": "959:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2750,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "959:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2751,
                    "nodeType": "ArrayTypeName",
                    "src": "959:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2754,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "985:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2756,
                  "src": "977:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2753,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "977:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "937:57:13"
            },
            "src": "921:74:13"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2757,
              "nodeType": "StructuredDocumentation",
              "src": "1001:317:13",
              "text": " @dev 'DropEther' return how many ether will be\n available for member\n @notice used in function 'dropEther'\n @param recepient - address of receiver\n @param amount - how many ether will send to member\n @param deadline - how many times member have to collect ether"
            },
            "id": 2767,
            "name": "DropEther",
            "nameLocation": "1329:9:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2760,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "recepient",
                  "nameLocation": "1349:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2767,
                  "src": "1339:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2758,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1339:7:13",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2759,
                    "nodeType": "ArrayTypeName",
                    "src": "1339:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2763,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1370:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2767,
                  "src": "1360:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2761,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1360:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2762,
                    "nodeType": "ArrayTypeName",
                    "src": "1360:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2765,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "1386:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2767,
                  "src": "1378:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2764,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1378:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1338:57:13"
            },
            "src": "1323:73:13"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2768,
              "nodeType": "StructuredDocumentation",
              "src": "1402:227:13",
              "text": " @dev 'NewContractAddress' inform about new ERC20 address\n which connect to 'AirDrop'\n @notice used in function 'updateTokenAddress'\n @param newContract - address of new ERC20 contract"
            },
            "id": 2772,
            "name": "NewContractAddress",
            "nameLocation": "1640:18:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2770,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newContract",
                  "nameLocation": "1667:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2772,
                  "src": "1659:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2769,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1659:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1658:21:13"
            },
            "src": "1634:46:13"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2773,
              "nodeType": "StructuredDocumentation",
              "src": "1686:240:13",
              "text": " @dev 'WithdrawEther' inform how many ether\n return to owner balance\n @notice used in function 'withdrawEther'\n @param to - address of owner\n @param amount - how many ether will back to owner"
            },
            "id": 2779,
            "name": "WithdrawEther",
            "nameLocation": "1937:13:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2775,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1959:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2779,
                  "src": "1951:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2774,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1951:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2777,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1971:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2779,
                  "src": "1963:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2776,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1963:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1950:28:13"
            },
            "src": "1931:48:13"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2780,
              "nodeType": "StructuredDocumentation",
              "src": "1985:244:13",
              "text": " @dev 'WithdrawTokens' inform how many tokens\n return to owner balance\n @notice used in function 'withdrawTokens'\n @param to - address of owner\n @param amount - how many tokens will back to owner"
            },
            "id": 2786,
            "name": "WithdrawTokens",
            "nameLocation": "2240:14:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2782,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2263:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2786,
                  "src": "2255:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2781,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2255:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2784,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2275:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2786,
                  "src": "2267:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2783,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2267:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2254:28:13"
            },
            "src": "2234:49:13"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2787,
              "nodeType": "StructuredDocumentation",
              "src": "2289:262:13",
              "text": " @dev 'ClaimToken' return to member how many tokens\n he will receive after success transactions\n @notice used in function 'claimToken'\n @param to - address of member\n @param amount - how many tokens send to member"
            },
            "id": 2793,
            "name": "ClaimToken",
            "nameLocation": "2562:10:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2789,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2581:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2793,
                  "src": "2573:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2788,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2573:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2791,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2593:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2793,
                  "src": "2585:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2790,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2585:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2572:28:13"
            },
            "src": "2556:45:13"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2794,
              "nodeType": "StructuredDocumentation",
              "src": "2607:262:13",
              "text": " @dev 'ClaimEther' return to member how many ethers\n he will receive after success transactions\n @notice used in function 'claimEther'\n @param to - address of member\n @param amount - how many ethers send to member"
            },
            "id": 2800,
            "name": "ClaimEther",
            "nameLocation": "2880:10:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2796,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2899:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2800,
                  "src": "2891:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2795,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2891:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2798,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2911:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2800,
                  "src": "2903:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2797,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2903:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2890:28:13"
            },
            "src": "2874:45:13"
          },
          {
            "documentation": {
              "id": 2801,
              "nodeType": "StructuredDocumentation",
              "src": "2925:132:13",
              "text": " @dev send ERC20 tokens from 'owner_' balance to SC\n @param amount_ - how many tokens deposits"
            },
            "functionSelector": "dd49756e",
            "id": 2806,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "depositTokens",
            "nameLocation": "3071:13:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2803,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "3093:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2806,
                  "src": "3085:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2802,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3085:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3084:17:13"
            },
            "returnParameters": {
              "id": 2805,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3110:0:13"
            },
            "scope": 2869,
            "src": "3062:49:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2807,
              "nodeType": "StructuredDocumentation",
              "src": "3117:141:13",
              "text": " @dev send ethers from 'owner_' balance to SC\n NOTE : if you send ether to 0 address , ethers will be blocked."
            },
            "functionSelector": "98ea5fca",
            "id": 2810,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "depositEther",
            "nameLocation": "3272:12:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3284:2:13"
            },
            "returnParameters": {
              "id": 2809,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3303:0:13"
            },
            "scope": 2869,
            "src": "3263:41:13",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2811,
              "nodeType": "StructuredDocumentation",
              "src": "3310:386:13",
              "text": " @dev make tokens available for members to withdraw\n @param recepients_ - address of member\n @param amount_ - how many tokens will be available\n @param deadline_ - how long signature will be valid\n @param v_ - can be only 27 or 28\n @param r_ - contain info to recover signer\n @param s_ - contain info to recover signer"
            },
            "functionSelector": "70a0176b",
            "id": 2828,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "dropTokens",
            "nameLocation": "3710:10:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2826,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2814,
                  "mutability": "mutable",
                  "name": "recepients_",
                  "nameLocation": "3749:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2828,
                  "src": "3730:30:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2812,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3730:7:13",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2813,
                    "nodeType": "ArrayTypeName",
                    "src": "3730:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2817,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "3789:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2828,
                  "src": "3770:26:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2815,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3770:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2816,
                    "nodeType": "ArrayTypeName",
                    "src": "3770:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2819,
                  "mutability": "mutable",
                  "name": "deadline_",
                  "nameLocation": "3814:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2828,
                  "src": "3806:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2818,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3806:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2821,
                  "mutability": "mutable",
                  "name": "v_",
                  "nameLocation": "3839:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2828,
                  "src": "3833:8:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2820,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3833:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2823,
                  "mutability": "mutable",
                  "name": "r_",
                  "nameLocation": "3859:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2828,
                  "src": "3851:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2822,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3851:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2825,
                  "mutability": "mutable",
                  "name": "s_",
                  "nameLocation": "3879:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2828,
                  "src": "3871:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2824,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3871:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3720:167:13"
            },
            "returnParameters": {
              "id": 2827,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3896:0:13"
            },
            "scope": 2869,
            "src": "3701:196:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2829,
              "nodeType": "StructuredDocumentation",
              "src": "3903:386:13",
              "text": " @dev make ethers available for members to withdraw\n @param recepients_ - address of member\n @param amount_ - how many ethers will be available\n @param deadline_ - how long signature will be valid\n @param v_ - can be only 27 or 28\n @param r_ - contain info to recover signer\n @param s_ - contain info to recover signer"
            },
            "functionSelector": "2ef1f9c9",
            "id": 2846,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "dropEther",
            "nameLocation": "4303:9:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2832,
                  "mutability": "mutable",
                  "name": "recepients_",
                  "nameLocation": "4341:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2846,
                  "src": "4322:30:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2830,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4322:7:13",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2831,
                    "nodeType": "ArrayTypeName",
                    "src": "4322:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2835,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "4381:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2846,
                  "src": "4362:26:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2833,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4362:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2834,
                    "nodeType": "ArrayTypeName",
                    "src": "4362:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2837,
                  "mutability": "mutable",
                  "name": "deadline_",
                  "nameLocation": "4406:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2846,
                  "src": "4398:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2836,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4398:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2839,
                  "mutability": "mutable",
                  "name": "v_",
                  "nameLocation": "4431:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2846,
                  "src": "4425:8:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2838,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4425:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2841,
                  "mutability": "mutable",
                  "name": "r_",
                  "nameLocation": "4451:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2846,
                  "src": "4443:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2840,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4443:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2843,
                  "mutability": "mutable",
                  "name": "s_",
                  "nameLocation": "4471:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2846,
                  "src": "4463:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2842,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4463:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4312:167:13"
            },
            "returnParameters": {
              "id": 2845,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4488:0:13"
            },
            "scope": 2869,
            "src": "4294:195:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2847,
              "nodeType": "StructuredDocumentation",
              "src": "4495:138:13",
              "text": " @dev Change actually ERC20\n @param token_ - address of new ERC20 which connected\n to 'this' contract"
            },
            "functionSelector": "6691461a",
            "id": 2852,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateTokenAddress",
            "nameLocation": "4647:18:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2849,
                  "mutability": "mutable",
                  "name": "token_",
                  "nameLocation": "4674:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2852,
                  "src": "4666:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2848,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4666:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4665:16:13"
            },
            "returnParameters": {
              "id": 2851,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4690:0:13"
            },
            "scope": 2869,
            "src": "4638:53:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2853,
              "nodeType": "StructuredDocumentation",
              "src": "4697:112:13",
              "text": " @dev This function return tokens to 'owner'\n NOTE: withdraw all available tokens"
            },
            "functionSelector": "8d8f2adb",
            "id": 2856,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawTokens",
            "nameLocation": "4823:14:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4837:2:13"
            },
            "returnParameters": {
              "id": 2855,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4848:0:13"
            },
            "scope": 2869,
            "src": "4814:35:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2857,
              "nodeType": "StructuredDocumentation",
              "src": "4855:110:13",
              "text": " @dev This function return ether to 'owner'\n NOTE: withdraw all available ether"
            },
            "functionSelector": "7362377b",
            "id": 2860,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawEther",
            "nameLocation": "4979:13:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2858,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4992:2:13"
            },
            "returnParameters": {
              "id": 2859,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5003:0:13"
            },
            "scope": 2869,
            "src": "4970:34:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2861,
              "nodeType": "StructuredDocumentation",
              "src": "5010:197:13",
              "text": " @dev allows to claim available tokens\n to the member\n NOTE: withdraw all available tokens , you can call\n this function only if you have available tokens"
            },
            "functionSelector": "4451d89f",
            "id": 2864,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "claimToken",
            "nameLocation": "5221:10:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2862,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5231:2:13"
            },
            "returnParameters": {
              "id": 2863,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5242:0:13"
            },
            "scope": 2869,
            "src": "5212:31:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2865,
              "nodeType": "StructuredDocumentation",
              "src": "5249:194:13",
              "text": " @dev allows to claim available ether\n to the member\n NOTE: withdraw all available ether , you can call\n this function only if you have available ether"
            },
            "functionSelector": "55291dbd",
            "id": 2868,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "claimEther",
            "nameLocation": "5457:10:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2866,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5467:2:13"
            },
            "returnParameters": {
              "id": 2867,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5478:0:13"
            },
            "scope": 2869,
            "src": "5448:31:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2870,
        "src": "57:5424:13",
        "usedErrors": []
      }
    ],
    "src": "33:5449:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-06-26T17:21:21.376Z",
  "devdoc": {
    "events": {
      "ClaimEther(address,uint256)": {
        "details": "'ClaimEther' return to member how many ethers he will receive after success transactions",
        "params": {
          "amount": "- how many ethers send to member",
          "to": "- address of member"
        }
      },
      "ClaimToken(address,uint256)": {
        "details": "'ClaimToken' return to member how many tokens he will receive after success transactions",
        "params": {
          "amount": "- how many tokens send to member",
          "to": "- address of member"
        }
      },
      "DepositEther(uint256)": {
        "details": "'DepositEther' info about success transfer from owner to SC",
        "params": {
          "amount": "- how many ether will deposit to contract balance"
        }
      },
      "DepositTokens(uint256)": {
        "details": "'DepositTokens' info about success transfer from owner to SC",
        "params": {
          "amount": "- how many tokens will deposit to contract balance"
        }
      },
      "DropEther(address[],uint256[],uint256)": {
        "details": "'DropEther' return how many ether will be available for member",
        "params": {
          "amount": "- how many ether will send to member",
          "deadline": "- how many times member have to collect ether",
          "recepient": "- address of receiver"
        }
      },
      "DropTokens(address[],uint256[],uint256)": {
        "details": "'DropTokens' return how many tokens will be available for member",
        "params": {
          "amount": "- how many tokens will send to member",
          "deadline": "- how many times member have to collect tokens",
          "recepient": "- address of receiver"
        }
      },
      "NewContractAddress(address)": {
        "details": "'NewContractAddress' inform about new ERC20 address which connect to 'AirDrop'",
        "params": {
          "newContract": "- address of new ERC20 contract"
        }
      },
      "WithdrawEther(address,uint256)": {
        "details": "'WithdrawEther' inform how many ether return to owner balance",
        "params": {
          "amount": "- how many ether will back to owner",
          "to": "- address of owner"
        }
      },
      "WithdrawTokens(address,uint256)": {
        "details": "'WithdrawTokens' inform how many tokens return to owner balance",
        "params": {
          "amount": "- how many tokens will back to owner",
          "to": "- address of owner"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "claimEther()": {
        "details": "allows to claim available ether to the member NOTE: withdraw all available ether , you can call this function only if you have available ether"
      },
      "claimToken()": {
        "details": "allows to claim available tokens to the member NOTE: withdraw all available tokens , you can call this function only if you have available tokens"
      },
      "depositEther()": {
        "details": "send ethers from 'owner_' balance to SC NOTE : if you send ether to 0 address , ethers will be blocked."
      },
      "depositTokens(uint256)": {
        "details": "send ERC20 tokens from 'owner_' balance to SC",
        "params": {
          "amount_": "- how many tokens deposits"
        }
      },
      "dropEther(address[],uint256[],uint256,uint8,bytes32,bytes32)": {
        "details": "make ethers available for members to withdraw",
        "params": {
          "amount_": "- how many ethers will be available",
          "deadline_": "- how long signature will be valid",
          "r_": "- contain info to recover signer",
          "recepients_": "- address of member",
          "s_": "- contain info to recover signer",
          "v_": "- can be only 27 or 28"
        }
      },
      "dropTokens(address[],uint256[],uint256,uint8,bytes32,bytes32)": {
        "details": "make tokens available for members to withdraw",
        "params": {
          "amount_": "- how many tokens will be available",
          "deadline_": "- how long signature will be valid",
          "r_": "- contain info to recover signer",
          "recepients_": "- address of member",
          "s_": "- contain info to recover signer",
          "v_": "- can be only 27 or 28"
        }
      },
      "updateTokenAddress(address)": {
        "details": "Change actually ERC20",
        "params": {
          "token_": "- address of new ERC20 which connected to 'this' contract"
        }
      },
      "withdrawEther()": {
        "details": "This function return ether to 'owner' NOTE: withdraw all available ether"
      },
      "withdrawTokens()": {
        "details": "This function return tokens to 'owner' NOTE: withdraw all available tokens"
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "ClaimEther(address,uint256)": {
        "notice": "used in function 'claimEther'"
      },
      "ClaimToken(address,uint256)": {
        "notice": "used in function 'claimToken'"
      },
      "DepositEther(uint256)": {
        "notice": "used in function 'depositEther'"
      },
      "DepositTokens(uint256)": {
        "notice": "used in function 'depositTokens'"
      },
      "DropEther(address[],uint256[],uint256)": {
        "notice": "used in function 'dropEther'"
      },
      "DropTokens(address[],uint256[],uint256)": {
        "notice": "used in function 'dropTokens'"
      },
      "NewContractAddress(address)": {
        "notice": "used in function 'updateTokenAddress'"
      },
      "WithdrawEther(address,uint256)": {
        "notice": "used in function 'withdrawEther'"
      },
      "WithdrawTokens(address,uint256)": {
        "notice": "used in function 'withdrawTokens'"
      }
    },
    "kind": "user",
    "methods": {},
    "version": 1
  }
}